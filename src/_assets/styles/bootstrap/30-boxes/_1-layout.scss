body {
	position:relative;
	display:flex;
}

// these defines the z-index values additional layers may be added as needed
$z-bg : -100;
$z-bbg : -90;
$z-bbbg : -80;
$z-main : 0;
$z-mmain : 10;
$z-mmmain : 20;
$z-front : 100;
$z-ffront : 110;
$z-fffront : 120;

$default-flex-direction: row;
$default-flex-wrap: wrap;
$default-flex-justify: space-between;

@mixin flexbox(	$direction: $default-flex-direction,
				$default-flex-wrap: $default-flex-wrap,
				$justify-content: $default-flex-justify) {
	display: flex;
	flex-direction: $direction;
	flex-wrap: $wrap
}

@mixin zindex($zindex: $z-main1, $forceposition: false) {
	z-index: $zindex;
	@if $forceposition == 'absolute' {
		position: absolute;
	}
	@else if $forceposition =='relative' {
		position: relative;
	}
	@else if $forceposition =='fixed' {
		position: fixed;
	}	
}
@mixin z-bg(		$zindex: $z-bg, 	$forceposition: false) { @include zindex( $zindex, $forceposition); }
@mixin z-bbg(		$zindex: $z-bbg, 	$forceposition: false) { @include zindex( $zindex, $forceposition); }
@mixin z-bbbg(		$zindex: $z-bbbg,	$forceposition: false) { @include zindex( $zindex, $forceposition); }
@mixin z-main(		$zindex: $z-main, 	$forceposition: false) { @include zindex( $zindex, $forceposition); }
@mixin z-mmain(		$zindex: $z-mmain, 	$forceposition: false) { @include zindex( $zindex, $forceposition); }
@mixin z-mmmain(	$zindex: $z-mmmain, $forceposition: false) { @include zindex( $zindex, $forceposition); }
@mixin z-front(		$zindex: $z-front, 	$forceposition: false) { @include zindex( $zindex, $forceposition); }
@mixin z-ffront(	$zindex: $z-ffront, $forceposition: false) { @include zindex( $zindex, $forceposition); }
@mixin z-fffront(	$zindex: $z-fffront,$forceposition: false) { @include zindex( $zindex, $forceposition); }


//// default parameter is the direction, but can nonetheless be changed afterwards.
@mixin flexbox-row( $wrap: $default-flex-wrap, $justify-content: $default-flex-justify, $direction: 'row') {
	@include flexbox( $direction, $wrap, $justify-content);
}
@mixin flexbox-rowR( $wrap: $default-flex-wrap, $justify-content: $default-flex-justify, $direction: 'row-reverse') {
	@include flexbox( $direction, $wrap, $justify-content);
}
@mixin flexbox-col( $wrap: $default-flex-wrap, 	$justify-content: $default-flex-justify, $direction: 'column') {
	@include flexbox( 'column', $wrap, $justify-content);
}
@mixin flexbox-colR( $wrap: $default-flex-wrap, $justify-content: $default-flex-justify, $direction: 'column-reverse') {
	@include flexbox( $direction, $wrap, $justify-content);
}

//// default parameter is the wrap, but can nonetheless be changed afterwards.
@mixin flexbox-wrap( $direction: $default-flex-direction, $justify-content: $default-flex-justify, $wrap: 'wrap') {
	@include flexbox( $direction, $wrap, $justify-content);
}
@mixin flexbox-nowrap( $direction: $default-flex-direction, $justify-content: $default-flex-justify, $wrap: 'nowrap') {
	@include flexbox( $direction, $wrap, $justify-content);
}
@mixin flexbox-wrapR( $direction: $default-flex-direction, $justify-content: $default-flex-justify, $wrap: 'wrap-reverse') {
	@include flexbox( $direction, $wrap, $justify-content);
}

//// default parameter is the wrap, but can nonetheless be changed afterwards.
@mixin flexbox-spaceA( $direction: $default-flex-direction, $wrap: $default-flex-wrap, $justify-content: 'space-around') {
	@include flexbox( $direction, $wrap, $justify-content);
}
@mixin flexbox-spaceB( $direction: $default-flex-direction, $wrap: $default-flex-, $justify-content: 'space-between') {
	@include flexbox( $direction, $wrap, $justify-content);
}
@mixin flexbox-center( $direction: $default-flex-direction, $wrap: $default-flex-, $justify-content: 'center') {
	@include flexbox( $direction, $wrap, $justify-content);
}
@mixin flexbox-start( $direction: $default-flex-direction, $wrap: $default-flex-, $justify-content: 'flex-start') {
	@include flexbox( $direction, $wrap, $justify-content);
}
@mixin flexbox-end( $direction: $default-flex-direction, $wrap: $default-flex-, $justify-content: 'flex-end') {
	@include flexbox( $direction, $wrap, $justify-content);
}

%clearfix {
  *zoom: 1;
  &:before, &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}
/*
Usage :

.container-with-floated-children {
	@extend %clearfix;
}
*/