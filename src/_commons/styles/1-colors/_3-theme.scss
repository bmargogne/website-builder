// here, colors themes are defined and prepare any intersting color association.

@mixin linear-gradient($direction, $color-stops...) {
  // Direction has been omitted and happens to be a color-stop
  @if is-direction($direction) == false {
    $color-stops: $direction, $color-stops;
    $direction: 180deg;
  }

  background: nth(nth($color-stops, 1), 1);
  background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
  background: linear-gradient($direction, $color-stops);
}

// Context selectors use scheme variables and can be reused as common items 
// when building themes

html {	
	background-color: $neutral-l; 
}
body {		
	background-color: $neutral-lll;
}
#start-body {
	background-image: linear-gradient($neutral-lll, $neutral)
}

::selection {
	background-color: $secondary-ll;
	color: $secondary-lll;		
}

.error {	color:$primary}



@mixin dynamic-button(	$bg: $primary, $txt: $primary-l,
						$bg-hover: $primary-l, $txt-hover: $primary-ll,
						$bg-active: $primary-d, $txt-active: $primary-ll,
						$bg-visited: $neutral-d, $txt-visited: $neutral-ll,
						$bg-slection: $neutral-ll, $txt-selection: $primary) {
	
	background-color: $bg;
	color: $txt;
	fill: $txt; // for svg files

	&:hover {
		background-color: $bg-hover;
		color: $txt-hover;
		fill: $txt-hover;
	}

	// add style for "on" button

	&:active {
		background-color: $bg-active;
		color: $txt-active;
		fill: $txt-active;
	}

	a:visited {
		background-color: $bg-visited;
		color: $txt-visited;
		fill: $txt-visited;
	}
}

.primary-button1 {
	@include dynamic-button();
}

.primary-button2 {
	@include dynamic-button($neutral, $primary-dd);
}



// // Primary to Neutral
// .color-static {
// 	color: $primary;
// 	fill: $primary;
// 	background-color: $primary-dd;

// }




// .color-dark-static {
// 	background-color: $primary-dd;
// 	color: $primary;
// 	fill: $primary;
// }

// .color-dark-dynamic {
// 	@extend .color-dark-static;

// 	&:hover {
// 		background-color: $primary-d;
// 		color: $primary-l;
// 		fill: $primary-l;
// 		cursor: pointer; 
// 	}

// 	&:active {
// 		background-color: $neutral-d;
// 		color: $secondary-d;
// 		fill: $secondary-d;
// 	}
// }




// .color-p-static {
// 	background-color: $primary;
// 	color: $primary-d;
// 	fill: $primary-d;
// }

// .color-p-dynamic {
// 	@extend .color-p-static;

// 	&:hover {
// 		background-color: $primary-l;
// 		color: $primary-dd;
// 		fill: $primary-dd;
// 		cursor: pointer;
// 	}

// 	&:active {
// 		background-color: $primary-l;
// 		color: $secondary-d;
// 		fill: $secondary-d;
// 	}
// }

